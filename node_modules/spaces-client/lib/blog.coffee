# Test commands:
#
# curl -X POST -H "Cookie:_social_navigator_session=rGbu73bk-gXSbv23lDWWlqxLnC0" -H "CONTENT-TYPE:application/x-www-form-urlencoded" -H "ACCEPT:application/vnd.moxiesoft.spaces-v1+json" -d 'blog%5Btitle%5D=qui+doloremque+minima+rerum+consequatur+magni+et+delectus&blog%5Bbody%5D=et+similique+fugiat+accusantium+quis+consequatur+aliquam+vitae+illo%0Aodit+ut+qui+nihil+modi+sunt+quod+aliquid%0Arerum+ea+dolores' https://xxgonzalo.moxiedev.com/blogs

class Blog
  Faker = require('faker')
  Resource = require('./resource')

  @createBlog = (site, sessionId, parentId, userId, onsuccess, onfail, oncreate) ->
    data = {
      blog: {
        title: Faker.Lorem.sentences(1),
        body: Faker.Lorem.sentences(4)
      }
    }
    data['blog']['parent_id'] = parentId if parentId
    Resource.createResource(site, userId, sessionId, 'blog', data, onsuccess, onfail, oncreate)

#    data = $.param data
#
#    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
#    xhr = new XMLHttpRequest()
#    xhr.setDisableHeaderCheck(true)
#    xhr.open('POST', site.full_url + "/blogs", true)
#    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
#    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
#    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
#    xhr.onload = () ->
#      if this.status == 200 || this.status == 201
#        blogId = this.responseText.match(/"id":"(.*?)"/)[1]
#        Spaces.logger.debug("[%s][%s] Created blog [%s]", site.site_id, userId, blogId)
#        Spaces.Session.addItem(site, userId, 'blog', blogId)
#      else
#        Spaces.logger.error("[%s][%s] Blog.create failed: %s - %s", site.site_id, userId, this.status, this.responseText)
#    xhr.send(data)

  @updateBlog = (site, sessionId, refObjId, userId, onsuccess, onfail) ->
    data = {
      blog: {
        title: Faker.Lorem.sentences(1)
      }
    }
    Resource.editResource(site, userId, sessionId, 'blog', refObjId, data, onsuccess, onfail)

  @deleteBlog = (site, sessionId, refObjId, userId, onsuccess, onfail, ondestroy) ->
    Resource.deleteResource(site, userId, sessionId, refObjId, 'blog', onsuccess, onfail, ondestroy)

  @createBlogpost = (site, sessionId, blogId, userId, onsuccess, onfail, oncreate) ->
    data = {
      blog_post: {
        title: Faker.Lorem.sentences(1),
        body: Faker.Lorem.sentences(20),
        parent_id: blogId
      }
    }
    Resource.createResource(site, userId, sessionId, 'blog_post', data, onsuccess, onfail, oncreate)

#    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
#    xhr = new XMLHttpRequest()
#    xhr.setDisableHeaderCheck(true)
#    xhr.open('POST', site.full_url + "/blog_posts", true)
#    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
#    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
#    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
#    xhr.onload = () ->
#      if this.status == 200 || this.status == 201
#        blogPostId = this.responseText.match(/"id":"(.*?)"/)[1]
#        Spaces.logger.debug("[%s][%s] Created blog post [%s]", site.site_id, userId, blogPostId)
#        Spaces.Session.addItem(site, userId, 'blogpost', blogPostId)
#      else
#        Spaces.logger.error("[%s][%s] BlogPost.create failed: %s - %s", site.site_id, userId, this.status, this.responseText)
#    xhr.send(data)

  @updateBlogpost = (site, sessionId, refObjId, userId, onsuccess, onfail) ->
    data = {
      blog_post: {
        body: Faker.Lorem.sentences(20)
      }
    }
    Resource.editResource(site, userId, sessionId, 'blog_post', refObjId, data, onsuccess, onfail)

  @deleteBlogpost = (site, sessionId, refObjId, userId, onsuccess, onfail, ondestroy) ->
    Resource.deleteResource(site, userId, sessionId, refObjId, 'blog_post', onsuccess, onfail, ondestroy)

module.exports = exports = Blog