Faker = require('Faker')
logger = require('./logger.js')
$ = require("jquery")

class Blog
  @create = (site, parentId, userId) ->
    Spaces = require('./spaces-client.js')
    data = {
      blog: {
        title: Faker.Lorem.sentences(1),
        body: Faker.Lorem.sentences(4)
      }
    }
    if parentId
      data['blog']['parent_id'] = parentId

    data = decodeURIComponent( $.param data )

    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
    xhr = new XMLHttpRequest()
    xhr.setDisableHeaderCheck(true)
    xhr.open('POST', site.full_url + "/blogs", true)
#    xhr.setRequestHeader("Content-Type", "application/json")
    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
    xhr.onload = () ->
      if this.status == 201
        id = this.responseText.match(/.*"id":"(.*?)".*/)[1]
        Spaces.Session.addItem(site, userId, 'blog', id)
      else
        logger.error("[%s][%s] Blog.create failed: %s - %s", site.site_id, userId, this.status, this.responseText)
    xhr.send(JSON.stringify(data))

  @createPost = (site, blogId, userId) ->
    Spaces = require('./spaces-client.js')
    data = {
      blog_post: {
        title: Faker.Lorem.sentences(1),
        body: Faker.Lorem.sentences(20),
        parent_id: blogId
      }
    }

    data = decodeURIComponent( $.param data )

    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
    xhr = new XMLHttpRequest()
    xhr.setDisableHeaderCheck(true)
    xhr.open('POST', site.full_url + "/blog_posts", true)
#    xhr.setRequestHeader("Content-Type", "application/json")
    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
    xhr.onload = () ->
      if this.status == 201
        id = this.responseText.match(/.*"id":"(.*)".*/)[1]
        Spaces.Session.addItem(site, userId, 'blogpost', id)
      else
        logger.error("[%s][%s] BlogPost.create failed: %s - %s", site.site_id, userId, this.status, this.responseText)
    xhr.send(JSON.stringify(data))

module.exports = exports = Blog