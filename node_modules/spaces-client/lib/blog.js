// Generated by CoffeeScript 1.6.3
(function() {
  var $, Blog, Faker, Resource, exports;

  Faker = require('faker');

  $ = require('jquery');

  Resource = require('./resource.js');

  Blog = (function() {
    function Blog() {}

    Blog.create = function(site, parentId, userId) {
      var Spaces, XMLHttpRequest, data, xhr;
      Spaces = require('./spaces-client.js');
      data = {
        blog: {
          title: Faker.Lorem.sentences(1),
          body: Faker.Lorem.sentences(4)
        }
      };
      if (parentId) {
        data['blog']['parent_id'] = parentId;
      }
      data = $.param(data);
      XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
      xhr = new XMLHttpRequest();
      xhr.setDisableHeaderCheck(true);
      xhr.open('POST', site.full_url + "/blogs", true);
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json");
      xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"]);
      xhr.onload = function() {
        var blogId;
        if (this.status === 200 || this.status === 201) {
          blogId = this.responseText.match(/"id":"(.*?)"/)[1];
          Spaces.logger.debug("[%s][%s] Created blog [%s]", site.site_id, userId, blogId);
          return Spaces.Session.addItem(site, userId, 'blog', blogId);
        } else {
          return Spaces.logger.error("[%s][%s] Blog.create failed: %s - %s", site.site_id, userId, this.status, this.responseText);
        }
      };
      return xhr.send(data);
    };

    Blog.updateBlog = function(site, parentId, userId) {
      var data;
      data = {
        blog: {
          title: Faker.Lorem.sentences(1)
        }
      };
      return Resource.editResource(site, userId, 'blog', data);
    };

    Blog.deleteBlog = function(site, parentId, userId) {
      return Resource.deleteResource(site, userId, 'blog');
    };

    Blog.createPost = function(site, blogId, userId) {
      var Spaces, XMLHttpRequest, data, xhr;
      Spaces = require('./spaces-client.js');
      data = $.param({
        blog_post: {
          title: Faker.Lorem.sentences(1),
          body: Faker.Lorem.sentences(20),
          parent_id: blogId
        }
      });
      XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
      xhr = new XMLHttpRequest();
      xhr.setDisableHeaderCheck(true);
      xhr.open('POST', site.full_url + "/blog_posts", true);
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json");
      xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"]);
      xhr.onload = function() {
        var blogPostId;
        if (this.status === 200 || this.status === 201) {
          blogPostId = this.responseText.match(/"id":"(.*?)"/)[1];
          Spaces.logger.debug("[%s][%s] Created blog post [%s]", site.site_id, userId, blogPostId);
          return Spaces.Session.addItem(site, userId, 'blogpost', blogPostId);
        } else {
          return Spaces.logger.error("[%s][%s] BlogPost.create failed: %s - %s", site.site_id, userId, this.status, this.responseText);
        }
      };
      return xhr.send(data);
    };

    Blog.updatePost = function(site, parentId, userId) {
      var data;
      data = {
        blog_post: {
          body: Faker.Lorem.sentences(20)
        }
      };
      return Resource.editResource(site, userId, 'blogpost', data);
    };

    Blog.deletePost = function(site, parentId, userId) {
      return Resource.deleteResource(site, userId, 'blogpost');
    };

    return Blog;

  })();

  module.exports = exports = Blog;

}).call(this);
