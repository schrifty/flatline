// Generated by CoffeeScript 1.6.3
(function() {
  var $, Category, Faker, exports;

  $ = require("jquery");

  Faker = require('Faker');

  Category = (function() {
    function Category() {}

    Category.create = function(site, parentId, userId) {
      var Spaces, XMLHttpRequest, data, xhr;
      Spaces = require('./spaces-client.js');
      data = {
        category: {
          title: Faker.Lorem.sentences(1),
          body: Faker.Lorem.sentences(4)
        }
      };
      if (parentId) {
        data['category']['parent_id'] = parentId;
      }
      XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
      xhr = new XMLHttpRequest();
      xhr.setDisableHeaderCheck(true);
      xhr.open('POST', site.full_url + "/categories", true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json");
      xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"]);
      xhr.onload = function() {
        var categoryId;
        if (this.status === 200 | this.status === 201) {
          categoryId = this.responseText.match(/"id":"(.*?)"/)[1];
          Spaces.logger.debug("[%s][%s] Created category [%s]", site.site_id, userId, categoryId);
          return Spaces.Session.addItem(site, userId, 'category', categoryId);
        } else {
          return Spaces.logger.error("[%s][%s] Category.create failed: %s - %s", site.site_id, userId, this.status, this.responseText);
        }
      };
      return xhr.send(JSON.stringify(data));
    };

    return Category;

  })();

  module.exports = exports = Category;

}).call(this);
