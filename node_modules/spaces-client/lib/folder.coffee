# Test commands:
#
# curl -v -X POST -H "Cookie:_social_navigator_session=WFhalcbwex0jEzlic5SmCCbPH5Q" -H "CONTENT-TYPE:application/x-www-form-urlencoded" -H "ACCEPT:application/vnd.moxiesoft.spaces-v1+json" -d 'document_library%5Btitle%5D=pequot&document_library%5Bparent_id%5D=5277babfbb1c4e4c79000213&document_library%5Bbody%5D=et+similique+fugiat+accusantium+quis+consequatur+aliquam+vitae+illo%0Aodit+ut+qui+nihil+modi+sunt+quod+aliquid%0Arerum+ea+dolores' https://xxryley.moxiedev.com/document_libraries

Faker = require('faker')
$ = require('jquery')
fs = require('fs')

# TODO - convert to form post instead of JSON
class Folder
  @create = (site, parentId, userId) ->
    Spaces = require('./spaces-client.js')
    data = {
      document_library: {
        title: Faker.Lorem.sentences(1),
#        created_with: 'wysiwyg',
#        body: Faker.Lorem.sentences(4),
#        tags: Faker.Lorem.words(3).join(" "),
        parent_id: parentId
      }
    }

    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
    xhr = new XMLHttpRequest()
    xhr.setDisableHeaderCheck(true)
    xhr.open('POST', site.full_url + "/document_libraries", true)
#    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
    xhr.setRequestHeader("Content-Type", "application/json")
    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
    xhr.onload = () ->
      if this.status == 200 || this.status == 201
        folderId = this.responseText.match(/"id":"(.*?)"/)[1]
        Spaces.logger.debug("[%s][%s] Created folder [%s]", site.site_id, userId, folderId)
        Spaces.Session.addItem(site, userId, 'folder', folderId)
      else
        Spaces.logger.error("[%s][%s] Folder.create failed: %s - %s", site.site_id, userId, JSON.stringify(xhr))
    xhr.onerror = (e) ->
      Spaces.logger.error(e)
    xhr.send(JSON.stringify(data))

  @createDocument = (site, folderId, userId) ->
    Spaces = require('./spaces-client.js')

    fileName = fileSize = null
    fs.readdir("./assets/files/", ( (err, files) ->
      throw err if err
      m = Math.floor(Math.random() * files.length)
      fileName = files[m]
      fs.stat("./assets/files/" + fileName, ((err, stats) ->
        throw err if err
        fileSize = stats.size
        Folder.initS3PresignedPost(site, userId, ((data) ->
          data = JSON.parse(data)
          Folder.uploadToS3(site, userId, data, fileName, fileSize, ( ->
            Spaces.logger.debug("[%s][%s] Uploaded document to S3", site.site_id, userId)
            Folder.createDocumentMetadata(folderId, site, userId, data, fileName, fileSize, ( (response) ->
              Spaces.logger.debug("[%s][%s] Created document [%s]", site.site_id, userId, documentId)
#              documentId = this.responseText.match(/"id":"(.*?)"/)[1]
              documentId = response.id
              Spaces.Session.addItem(site, userId, 'document', documentId)
            ), ((message) ->
              Spaces.logger.error(message)
            ))
          ), ((message) ->
            Spaces.logger.error(message)
          ))
        ), ((message) ->
          Spaces.logger.error(message)
        ))
      ))
    ))

  @initS3PresignedPost = (site, userId, onsuccess, onfail) ->
    Spaces = require('./spaces-client.js')
    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
    xhr = new XMLHttpRequest()
    xhr.setDisableHeaderCheck(true)
    xhr.open('GET', site.full_url + "/documents/init_s3_presigned_post?legacy=false", true)
    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
    xhr.onload = () ->
      if this.status == 200 || this.status == 201
        Spaces.logger.debug("[%s][%s] Folder.initS3PresignedPost succeeded: %s", site.site_id, userId, this.responseText)
        onsuccess(this.responseText)
      else
        Spaces.logger.error("[%s][%s] Folder.initS3PresignedPost failed: %s - %s", site.site_id, userId, this.status, this.responseText)
        onfail(this.status, this.responseText)
    xhr.send()

  @uploadToS3 = (site, userId, data, fileName, fileSize, onsuccess, onfail) ->
    Spaces = require('./spaces-client.js')

    boundaryKey = Math.random().toString(16)
    keys = ["AWSAccessKeyId", "key", "policy", "signature", "acl", "success_action_status"]

    body = "\r\n"
    for key in keys
      body += '--' + boundaryKey + '\r\n'
      body += 'Content-Disposition: form-data; name="' + key + '"\r\n\r\n'
      body += data.fields[key] + '\r\n'
    body += '--' + boundaryKey + '\r\n'
    body += 'Content-Disposition: form-data; name="file"; filename="' + fileName + '"\r\n'
    body += 'Content-Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document\r\n\r\n'

    post_options = {
      host: data.url.match(/https:\/\/(.*)\/$/)[1],
      method: 'POST',
      headers: {
#        "Host": host,
        "Content-Type": 'multipart/form-data; boundary="'+boundaryKey+'"',
        "Content-Length": body.length + fileSize + ('\r\n--' + boundaryKey + '--').length,
        "Accept": 'application/vnd.moxiesoft.spaces-v1+json'
      }
    }

    # TODO change to https
    post_req = require('https').request(post_options, ((res) ->
      res.setEncoding('utf8')
      response = ""
      res.on('data', ((chunk) ->
        response = response + chunk
      ))
      res.on('end', (() ->
        Spaces.logger.debug("[%s][%s] Folder.uploadToS3 request ended: %s - %s", site.site_id, userId, res.statusCode, res.status)
        if res.statusCode == 200 || res.statusCode == 201
          onsuccess()
        else
          onfail(response)
      ))
    ))

    post_req.on('error', ((e) ->
      Spaces.logger.error("[%s][%s] Folder.uploadToS3 failed: %j", site.site_id, userId, e)
      onfail(e)
    ))
    post_req.write(body)

    x = fs.createReadStream('./assets/files/' + fileName, { bufferSize: 4 * 1024 })
    x.on('end', (() ->
        post_req.end('\r\n--' + boundaryKey + '--')
      ))
      .pipe(post_req, { end: false } )
      .on('error', ((e) ->
        Spaces.logger.error("[%s][%s] read stream error: %j", site.site_id, userId, e)
      ))

  @createDocumentMetadata = (folderId, site, userId, data, fileName, fileSize, onsuccess, onfail) ->
    Spaces = require('./spaces-client.js')

    data = $.param {
      document: {
        parent_id: folderId,
        version: true,
        indirect_file_save: data.spaces_fields["document[indirect_file_save"],
        file_updated: data.spaces_fields["document[file_updated]"],
        upload: {
          file_id: data.spaces_fields["document[upload][file_id]"],
          file_s3_key: data.fields.key,
          file_name: fileName,
          file_size: fileSize,
          file_s3: data.spaces_fields["document[upload][file_s3]"]
        }
      }
    }

    XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest
    xhr = new XMLHttpRequest()
    xhr.setDisableHeaderCheck(true)
    xhr.open('POST', site.full_url + "/document_libraries/" + folderId + "/documents", true)
    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
#    xhr.setRequestHeader("Content-Type", "application/json")
    xhr.setRequestHeader("Accept", "application/vnd.moxiesoft.spaces-v1+json")
    xhr.setRequestHeader("Cookie", ["_social_navigator_session=" + Spaces.Session.getSessionId(site, userId), "path=/"])
    xhr.onload = () ->
      if this.status == 200 || this.status == 201
        onsuccess(this.responseText)
      else
        Spaces.logger.error("[%s][%s] Folder.createDocument failed: %s - %s", site.site_id, userId, this.status, this.responseText)
        onfail(this.status, this.responseText)
    xhr.send(data)

module.exports = exports = Folder