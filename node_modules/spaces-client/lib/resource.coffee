class Resource
  $ = require('jquery')

  @getResource = (host, userId, sessionId, resourceId, resourceName, sPath, addlHeaders, onsuccess, onfail) ->
    Spaces = require('./spaces-client')

    try site_id = host.match(/(.*)\..*$/)[1]
    catch e then site_id = "unknown"

    headers = {
      "Accept": "application/vnd.moxiesoft.spaces-v1+json"
    }
    if addlHeaders
      headers = $.extend({}, headers, addlHeaders)

    opts = {
      headers: headers,
      hostname: host,
      path: sPath || ('/' + @pluralize(resourceName) + '/' + resourceId)
    }

    req = require('https').request(opts, ((res) ->
      res.setEncoding('utf8')
      res.on('end', (() ->
        if res.statusCode == 200
          if id
            Spaces.logger.debug("[%s][%s] Got %s [%s]", site_id, userId, resourceName, resourceId)
          else
            Spaces.logger.debug("[%s][%s] Got %s", site_id, userId, resourceName)
          onsuccess()
        else
          Spaces.logger.error("[%s][%s] %s#get/%s failed: %d - %s", site_id, userId, resourceName, res.statusCode, res.status)
          onfail()
      ))
    ))
    req.on('error', ((e) ->
      Spaces.logger.error("[%s][%s] %s#get/%s failed: [%s] %s\n%s", site_id, userId, resourceName, req.statusCode, e.message, e.stack)
      onfail()
    ))
    req.end()

  @createResource = (site, userId, sessionId, resourceName, dataJson, onsuccess, onfail, oncreate) ->
    Spaces = require('./spaces-client')

    Spaces.logger.error("[%s][%s] NO SESSION ID", site.site_id, userId) unless sessionId
    data = $.param dataJson

    opts = {
      hostname: site.full_url.match(/https:\/\/(.*)$/)[1],
      path: "/" + @pluralize(resourceName),
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
        "Accept": "application/vnd.moxiesoft.spaces-v1+json",
        "Cookie": ["_social_navigator_session=" + sessionId, "path=/"]
      }
    }

    resp = ""
    req = require('https').request(opts, ((res) ->
      res.setEncoding('utf8')
      res.on('data', ((chunk) ->
        resp += chunk
      ))
      res.on('end', (() ->
        if res.statusCode == 200 || res.statusCode == 201
          id = resp.match(/"id":"(.*?)"/)[1]
          Spaces.logger.info("[%s][%s] Created %s [id: %s]", site.site_id, userId, resourceName, id)
          oncreate(resourceName, id) if oncreate
          onsuccess()
        else
          Spaces.logger.error("[%s][%s] %s#create/%s failed: %d - %s", site.site_id, userId, resourceName, res.statusCode, res.status)
          onfail()
      ))
    ))
    req.on('error', ((e) ->
      Spaces.logger.error("[%s][%s] %s#delete/%s failed: [%s] %s\n%s", site.site_id, userId, resourceName, req.statusCode, e.message, e.stack)
      onfail()
    ))
    req.write(data)
    req.end()

  @deleteResource = (site, userId, sessionId, resourceId, resourceName, onsuccess, onfail, ondestroy) ->
    Spaces = require('./spaces-client')

    opts = {
      hostname: site.full_url.match(/https:\/\/(.*)$/)[1],
      path: "/" + resourceName + "s/" + resourceId,
      method: 'DELETE',
      headers: {
        "Accept": 'application/vnd.moxiesoft.spaces-v1+json'
        "Cookie": ["_social_navigator_session=" + sessionId, "path=/"]
      }
    }
    req = require('https').request(opts, ((res) ->
      res.setEncoding('utf8')
      res.on('end', (() ->
        if res.statusCode == 200
          # TODO clean up on deletes
          Spaces.logger.debug("[%s][%s] Deleted %s [%s]", site.site_id, userId, resourceName, resourceId)
          ondestroy(resourceId) if ondestroy
          onsuccess()
        else
          Spaces.logger.debug("[%s][%s] %s#delete/%s failed: %d - %s", site.site_id, userId, resourceName, resourceId, res.statusCode, res.status)
          onfail()
      ))
    ))
    req.on('error', ((e) ->
      Spaces.logger.error("[%s][%s] %s#delete/%s failed: %s - %s\n%s", site.site_id, userId, resourceName, resourceId, req.statusCode, e.message, e.stack)
      onfail()
    ))
    req.end()

  @editResource = (site, userId, sessionId, resourceName, resourceId, dataJson, onsuccess, onfail) ->
    Spaces = require('./spaces-client')

    data = $.param dataJson

    opts = {
      hostname: site.full_url.match(/https:\/\/(.*)$/)[1],
      path: "/" + resourceName + "s/" + resourceId,
      method: 'PUT',
      headers: {
        "Content-Type": "application/x-www-form-urlencoded"
        "Accept": 'application/vnd.moxiesoft.spaces-v1+json'
        "Cookie": ["_social_navigator_session=" + sessionId, "path=/"]
      }
    }

    req = require('https').request(opts, ((res) ->
      res.setEncoding('utf8')
      res.on('end', (() ->
        if res.statusCode == 200
          Spaces.logger.debug("[%s][%s] Updated %s [%s]", site.site_id, userId, resourceName, resourceId)
          onsuccess()
        else
          Spaces.logger.error("[%s][%s] %s#update/%s failed: %d - %s", site.site_id, userId, resourceName, resourceId, res.statusCode, res.status)
          onfail()
      ))
    ))
    req.on('error', ((e) ->
      Spaces.logger.error("[%s][%s] %s#update/%s failed: %s - %s\n%s", site.site_id, userId, resourceName, resourceId, req.statusCode, e.message, e.stack)
      onfail()
    ))
    req.write(data)
    req.end()

  @pluralize = (resourceName) ->
    if resourceName == "activity"
      plural = "activities"
    else if resourceName == "category"
      plural = "categories"
    else if resourceName == "document_library"
      plural = "document_libraries"
    else
      plural = resourceName + 's'

    return plural


module.exports = exports = Resource
