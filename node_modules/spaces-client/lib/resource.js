// Generated by CoffeeScript 1.6.3
(function() {
  var Resource, exports;

  Resource = (function() {
    var $;

    function Resource() {}

    $ = require('jquery');

    Resource.getResource = function(site, userId, sessionId, sPath, addlHeaders, onsuccess, onfail) {
      var Spaces, e, headers, host, opts, req, site_id;
      Spaces = require('./spaces-client');
      headers = {
        "Accept": "application/vnd.moxiesoft.spaces-v1+json"
      };
      if (addlHeaders) {
        headers = $.extend({}, headers, addlHeaders);
      }
      host = site.full_url.match(/https:\/\/(.*)$/)[1];
      try {
        site_id = host.match(/(.*)\..*$/)[1];
      } catch (_error) {
        e = _error;
        site_id = "unknown";
      }
      opts = {
        headers: headers,
        hostname: host,
        path: "/" + sPath
      };
      Spaces.logger.debug(JSON.stringify(opts));
      req = require('https').request(opts, (function(res) {
        var resp;
        res.setEncoding('utf8');
        resp = "";
        res.on('data', (function(chunk) {
          return resp += chunk;
        }));
        return res.on('end', (function() {
          if (res.statusCode === 200) {
            return onsuccess(resp);
          } else {
            Spaces.logger.debug("[%s][%s] FAIL: GET %s (%d - %s)", site_id, userId, sPath, res.statusCode, res.status);
            return onfail();
          }
        }));
      }));
      req.on('error', (function(e) {
        Spaces.logger.error("[%s][%s] FAIL: GET %s (%s - %s)\n%s", site_id, userId, sPath, req.statusCode, e.message, e.stack);
        return onfail();
      }));
      return req.end();
    };

    Resource.createResource = function(site, userId, sessionId, sPath, dataJson, onsuccess, onfail, oncreate) {
      var Spaces, data, opts, req, resp;
      Spaces = require('./spaces-client');
      if (!sessionId) {
        Spaces.logger.error("[%s][%s] NO SESSION ID", site.site_id, userId);
        return false;
      }
      data = $.param(dataJson);
      opts = {
        hostname: site.full_url.match(/https:\/\/(.*)$/)[1],
        path: "/" + sPath,
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
          "Accept": "application/vnd.moxiesoft.spaces-v1+json",
          "Cookie": ["_social_navigator_session=" + sessionId, "path=/"]
        }
      };
      resp = "";
      req = require('https').request(opts, (function(res) {
        res.setEncoding('utf8');
        res.on('data', (function(chunk) {
          return resp += chunk;
        }));
        return res.on('end', (function() {
          var id;
          if (res.statusCode === 200 || res.statusCode === 201) {
            id = resp.match(/"id":"(.*?)"/)[1];
            Spaces.logger.debug("[%s][%s] SUCCESS: POST %s", site.site_id, userId, sPath);
            oncreate(id);
            return onsuccess();
          } else {
            Spaces.logger.debug("[%s][%s] FAIL: POST %s (%d - %s)", site.site_id, userId, sPath, res.statusCode, res.status);
            return onfail();
          }
        }));
      }));
      req.on('error', (function(e) {
        Spaces.logger.error("[%s][%s] FAIL: POST %s (%s - %s)\n%s", site.site_id, userId, sPath, req.statusCode, e.message, e.stack);
        return onfail();
      }));
      req.write(data);
      return req.end();
    };

    Resource.deleteResource = function(site, userId, sessionId, sPath, onsuccess, onfail, ondestroy) {
      var Spaces, opts, req;
      Spaces = require('./spaces-client');
      opts = {
        hostname: site.full_url.match(/https:\/\/(.*)$/)[1],
        path: "/" + sPath,
        method: 'DELETE',
        headers: {
          "Accept": 'application/vnd.moxiesoft.spaces-v1+json',
          "Cookie": ["_social_navigator_session=" + sessionId, "path=/"]
        }
      };
      req = require('https').request(opts, (function(res) {
        res.setEncoding('utf8');
        return res.on('end', (function() {
          if (res.statusCode === 200) {
            Spaces.logger.debug("[%s][%s] SUCCESS: DELETE %s", site.site_id, userId, sPath);
            ondestroy();
            return onsuccess();
          } else {
            Spaces.logger.debug("[%s][%s] FAIL: DELETE %s (%d - %s)", site.site_id, userId, sPath, res.statusCode, res.status);
            return onfail();
          }
        }));
      }));
      req.on('error', (function(e) {
        Spaces.logger.error("[%s][%s] FAIL: DELETE %s (%s - %s)\n%s", site.site_id, userId, sPath, req.statusCode, e.message, e.stack);
        return onfail();
      }));
      return req.end();
    };

    Resource.editResource = function(site, userId, sessionId, sPath, dataJson, onsuccess, onfail) {
      var Spaces, data, opts, req;
      Spaces = require('./spaces-client');
      data = $.param(dataJson);
      opts = {
        hostname: site.full_url.match(/https:\/\/(.*)$/)[1],
        path: "/" + sPath,
        method: 'PUT',
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
          "Accept": 'application/vnd.moxiesoft.spaces-v1+json',
          "Cookie": ["_social_navigator_session=" + sessionId, "path=/"]
        }
      };
      req = require('https').request(opts, (function(res) {
        res.setEncoding('utf8');
        return res.on('end', (function() {
          if (res.statusCode === 200) {
            Spaces.logger.debug("[%s][%s] SUCCESS: PUT %s", site.site_id, userId, sPath);
            return onsuccess();
          } else {
            Spaces.logger.debug("[%s][%s] FAIL: PUT %s (%d - %s)", site.site_id, userId, sPath, res.statusCode, res.status);
            return onfail();
          }
        }));
      }));
      req.on('error', (function(e) {
        Spaces.logger.error("[%s][%s] FAIL: PUT %s (%s - %s)\n%s", site.site_id, userId, sPath, req.statusCode, e.message, e.stack);
        return onfail();
      }));
      req.write(data);
      return req.end();
    };

    return Resource;

  })();

  module.exports = exports = Resource;

}).call(this);
