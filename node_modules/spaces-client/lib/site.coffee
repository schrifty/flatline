class Site
  @createSite: (data, onsuccess, onfail) ->
    Spaces = require("./spaces-client.js")
    $ = require("jquery")
    $.ajax Spaces.mothership_url + '/api/sites',
      type: 'POST',
      dataType: 'json',
      data: JSON.stringify(data)
      beforeSend: (request) ->
        request.setRequestHeader("Accept", "application/vnd.moxiesoft.mothership-v1+json")
        request.setRequestHeader("Content-Type", "application/json")
        request.setRequestHeader("API-KEY", '5d66dba7bf456cbfa5319aedeca9daf2')
      error: (jqXHR, textStatus, errorThrown) ->
        console.log "Error creating site: " + textStatus + " - " + errorThrown + " - " + JSON.stringify(jqXHR)
        onfail(errorThrown)
      success: (data) ->
        console.log "Site Created: " + JSON.stringify(data)
        onsuccess(data)

  # why are we using the https module instead of $.ajax? Because $.ajax denies us access to http-only cookies.
  @login: (data, site, onsuccess, onfail) ->
    Spaces = require("./spaces-client.js")
    options = {
      hostname: site.sub_domain + "." + site.domain,
      path: "/users/sign_in.json",
      method: 'POST'
      headers: {
        "Accept": "application/vnd.moxiesoft.mothership-v1+json",
        "Content-Type": "application/json"
      }
    }
    https = require('https')
    req = https.request(options, ((res) ->
      res.setEncoding('utf8')
      res.on('data', ((chunk) ->
          console.log('Logged In: ' + chunk)
          cookies = res.headers['set-cookie']
          list = {}
          for cookie in cookies
            for bit in cookie.split(";")
              parts = bit.split('=')
              list[parts.shift().trim()] = unescape(parts.join('='))
          onsuccess(chunk, list)
      ))
    ))
    req.on('error', ((e) ->
      console.log('Error Logging In: ' + e.message)
      onfail(e.message)
    ))
    req.write(JSON.stringify(data))
    req.end()

module.exports = exports = Site