logger = require('./logger.js')

class Site

  @createSite: (data, onsuccess, onfail) ->
    Spaces = require('./spaces-client.js')
    $ = require("jquery")
    $.ajax Spaces.mothership_url + '/api/sites',
      type: 'POST',
      dataType: 'json',
      data: JSON.stringify(data)
      beforeSend: (request) ->
        request.setRequestHeader("Accept", "application/vnd.moxiesoft.mothership-v1+json")
        request.setRequestHeader("Content-Type", "application/json")
        request.setRequestHeader("API-KEY", '5d66dba7bf456cbfa5319aedeca9daf2')
      error: (jqXHR, textStatus, errorThrown) ->
        logger.error("Error creating site: %s - %s - %j", textStatus, errorThrown, jqXHR)
        onfail(errorThrown)
      success: (data) ->
        siteId = JSON.stringify(data).match(/.*"site_id":"(.*?)".*/)[1]
        logger.debug('[%s][%s] Site Created', siteId, 'Admin')
        onsuccess(data)

  # why are we using the https module instead of $.ajax? Because $.ajax denies us access to http-only cookies.
  @login: (data, site, onsuccess, onfail) ->
    options = {
      hostname: site.sub_domain + "." + site.domain,
      path: "/users/sign_in.json",
      method: 'POST'
      headers: {
        "Accept": "application/vnd.moxiesoft.mothership-v1+json",
        "Content-Type": "application/json"
      }
    }
    Site.tryUntilSuccess(data, options, ((resp, cookies) ->
      list = {}
      for cookie in cookies
        for bit in cookie.split(";")
          parts = bit.split('=')
          list[parts.shift().trim()] = unescape(parts.join('='))
      onsuccess(resp, list)
    ), ((msg) ->
      onfail(msg)
    ))

  @tryUntilSuccess: (data, options, onsuccess, onerror) ->
    https = require('https')
    req = https.request(options, ((res) ->
      res.setEncoding('utf8')

      resp = ""
      res.on('data', ((chunk) ->
        resp += chunk.toString("utf-8")
      ))

      res.on('end', (() ->
        if res.statusCode == 200 || res.statusCode == 201
          onsuccess(resp, res.headers['set-cookie'])
        else
          cb = () ->
            Site.tryUntilSuccess(data, options, onsuccess, onerror)
          setTimeout cb, 10000
      ))
    ))
    req.write(JSON.stringify(data))
    req.end()

    req.on('error', ((e) ->
      logger.error('Unable to log in: %s', e.message)
      onerror(e.message)
    ))

module.exports = exports = Site