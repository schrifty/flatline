// Generated by CoffeeScript 1.6.3
(function() {
  var SpacesClient;

  SpacesClient = (function() {
    function SpacesClient() {}

    SpacesClient.Activity = require("./activity");

    SpacesClient.Blog = require("./blog");

    SpacesClient.Category = require("./category");

    SpacesClient.Folder = require("./folder");

    SpacesClient.Forum = require("./forum");

    SpacesClient.Group = require("./group");

    SpacesClient.Ideastorm = require("./ideastorm");

    SpacesClient.Pod = require("./pod");

    SpacesClient.Site = require("./site");

    SpacesClient.User = require("./user");

    SpacesClient.logger = null;

    SpacesClient.setLogger = function(logger) {
      return this.logger = logger;
    };

    SpacesClient.mothershipUrl = null;

    SpacesClient.setMothershipURL = function(url) {
      return this.mothershipUrl = url;
    };

    SpacesClient.apiKey = null;

    SpacesClient.setApiKey = function(key) {
      return this.apiKey = key;
    };

    SpacesClient.socket = null;

    SpacesClient.setSocket = function(socket) {
      return this.socket = socket;
    };

    SpacesClient.process = function(site, userId, action, sessionId, parentId, handlers) {
      var args, klass, methodName;
      switch (action.resource) {
        case 'blog':
        case 'blogpost':
        case 'blog_post':
          klass = this.Blog;
          break;
        case 'activity':
          klass = this.Activity;
          break;
        case 'category':
          klass = this.Category;
          break;
        case 'folder':
        case 'document':
          klass = this.Folder;
          break;
        case 'forum':
        case 'discussion':
          klass = this.Forum;
          break;
        case 'group':
          klass = this.Group;
          break;
        case 'ideastorm':
        case 'idea':
          klass = this.Ideastorm;
          break;
        case 'wiki':
        case 'wikipage':
        case 'wiki_page':
          klass = this.Wiki;
          break;
        default:
          SpacesClient.logger.error("[%s][%s] Unrecognized class: %s", site, userId, action.resource);
          return false;
      }
      methodName = action.method + action.resource.charAt(0).toUpperCase() + action.resource.slice(1).replace("_", "");
      args = [site, sessionId, parentId, userId, handlers.onsuccess, handlers.onfail];
      if (action.method === 'create') {
        args.push(handlers.oncreate);
      }
      if (action.method === 'delete') {
        args.push(handlers.ondelete);
      }
      SpacesClient.logger.info("Max Sockets: [%d]  Queue Depth: [%d]", require('https').globalAgent.maxSockets, Object.keys(require('https').globalAgent.requests).length);
      return klass[methodName].apply(klass, args);
    };

    return SpacesClient;

  })();

  module.exports = SpacesClient;

  module.exports.setLogger = SpacesClient.setLogger;

  module.exports.getLogger = SpacesClient.getLogger;

  module.exports.setSocket = SpacesClient.setSocket;

}).call(this);
