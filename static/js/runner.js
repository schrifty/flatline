// Generated by CoffeeScript 1.6.3
(function() {
  var Runner, SITE_CREATE_FREQUENCY_MS;

  SITE_CREATE_FREQUENCY_MS = 5000;

  Runner = (function() {
    var Action, Faker, Spaces, maxServers, maxSites;

    function Runner() {}

    maxSites = 1;

    maxServers = 5;

    Runner.sites = [];

    Spaces = new require('spaces-client');

    Action = require('./action.js');

    Faker = require('Faker');

    Runner.createSite = function() {
      var data, site_name;
      site_name = "xx" + Faker.Internet.domainWord();
      data = {
        site: {
          site_id: site_name,
          customer_name: "Acme",
          site_type_name: "Freemium",
          settings: {
            skip_signup_activation: true
          }
        }
      };
      return Spaces.Site.createSite(data, (function(site) {
        Runner.sites.push(site);
        return Runner.login(site, 'tech-support@moxiesoft.com', 'k3ithm00n', (function(userId) {
          var callback;
          Spaces.Session.setAdminId(userId);
          Action.seed(site, userId);
          Runner.createUser(site);
          if (Runner.sites.length < maxSites) {
            callback = function() {
              return Runner.createSite();
            };
            return setTimeout(callback, (SITE_CREATE_FREQUENCY_MS / 2) + Math.random(SITE_CREATE_FREQUENCY_MS));
          }
        }));
      }), (function(message) {
        return console.log("Unable to create successfully - abandoning site [" + site.site_id + "]");
      }));
    };

    Runner.createUser = function(site) {
      var data, email, password;
      if (!(Runner.sites.length > 0)) {
        Runner.sites.push(site);
      }
      password = "L1berty*";
      email = Faker.Internet.email();
      data = {
        user: {
          email: email,
          display_name: Faker.Name.findName(),
          password: password,
          password_confirmation: password
        }
      };
      return Spaces.User.create(data, site.full_url, (function(user) {
        var callback;
        console.log("[" + site.site_id + "][" + user.id + "]: Added User");
        Runner.login(site, email, password, (function(userId) {
          if (!site.users) {
            site.users = [];
          }
          site.users.push(userId);
          return Runner.startActivity(site, userId);
        }));
        callback = function() {
          return Runner.createUser(site);
        };
        return setTimeout(callback, 1000);
      }), (function(message) {
        return console.log(message);
      }));
    };

    Runner.login = function(site, email, password, onsuccess) {
      var data;
      if (!(Runner.sites.length > 0)) {
        Runner.sites.push(site);
      }
      data = {
        user: {
          email: email,
          password: password
        }
      };
      return Spaces.Site.login(data, site, (function(resp, cookies) {
        var userId;
        userId = resp.match(/^.*"id":"(.*?)".*/)[1];
        Spaces.Session.setSessionId(userId, cookies['_social_navigator_session']);
        return onsuccess(userId);
      }), (function(msg) {
        return console.log("User failed to log in [" + email + ":" + password + "]: " + msg);
      }));
    };

    Runner.startActivity = function(site, userId) {
      var callback;
      Action = require("./action.js");
      Action.doSomething(Runner.sites, site.full_url, userId);
      callback = function() {
        return Runner.startActivity(site, userId);
      };
      return setTimeout(callback, 10000);
    };

    return Runner;

  })();

  module.exports = Runner;

}).call(this);
